<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RTEMS | My RTEMS GSOC Blog]]></title>
  <link href="http://WeiY.github.io/blog/categories/rtems/atom.xml" rel="self"/>
  <link href="http://WeiY.github.io/"/>
  <updated>2013-07-29T00:38:27+08:00</updated>
  <id>http://WeiY.github.io/</id>
  <author>
    <name><![CDATA[WeiY]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[phase fiair test case]]></title>
    <link href="http://WeiY.github.io/blog/2013/07/28/phase-fiair-test-case/"/>
    <updated>2013-07-28T23:51:00+08:00</updated>
    <id>http://WeiY.github.io/blog/2013/07/28/phase-fiair-test-case</id>
    <content type="html"><![CDATA[<p>The new atomic API draft design has been completed and the first version has been push into RTEMS mainline. Now the atomic ops implemenation is dependent on C11 stdatomic.h, so if the toolchain of some architecture does not support stdatomic.h it will not have atomic support(now it will post some error log when in the process of rtems compiling). And arm architecture can build successfully using atomic support. But sparc architecture lack of &lsquo;cas&rsquo; instruction support in the toolchain. About this issue i have post a mail to gcc org <a href="http://gcc.gnu.org/ml/gcc/2013-07/msg00272.html" title="RTEMS Source Builder">atomic support for LEON3 platform</a> and the gcc developer will consider add &lsquo;cas&rsquo; support for LEON3.</p>

<p>Then i am working on the new atomic test case design. The first step is to provide some example about usage of atomic API. There is a good reference about atomic API design and test case design, <a href="http://concurrencykit.org/" title="Concurrency kit">Concurrency kit</a>. It has support many atomic API and also provide lots of test case for according API. Becasue phase fair lock is very important for embedded system such RTEMS, i start port the phase fair lock test case from Concurrency kit to RTEMS. Now it has been completed, code is uploaded to github <a href="https://github.com/WeiY/rtems/commit/25fb61a5252db423b8f55c0d57c151c7271ebfdb" title="phase fair test case">phase fair test case</a>. There is still some problem about the printf under the SMP environment, i will try to make it work and submit to mainline.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New implementation of atomic for RTEMS]]></title>
    <link href="http://WeiY.github.io/blog/2013/07/07/new-implementation-of-atomic-for-rtems/"/>
    <updated>2013-07-07T14:23:00+08:00</updated>
    <id>http://WeiY.github.io/blog/2013/07/07/new-implementation-of-atomic-for-rtems</id>
    <content type="html"><![CDATA[<p>Now lots of operation system have support their own atomic implementation. In the last year&rsquo;s GSOC project i have also design atomic API for RTEMS and also ported the architecture-dependent implementation from FreeBSD to RTEMS. In the original design i have consider the roadmap of the atomic support for RTEMS, its first principle is to be easy to move to the C11 atomic implementation. Now it is time to move to C11 atomic because GCC4.8 and clang3.3 have supported this feature already.</p>

<p>My mentor Sebastian Huber have ported the stdatomic.h from FreeBSD to newlib. You can build it from the RSB(Rtems Source Builder). The build command is as follow (I build it not based on the latest RSB, If the latest RSB support stdatomic.h ignore me):
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone git://git.rtems.org/rtems-source-builder.git
</span><span class='line'><span class="nb">cd </span>rtems-source-builder
</span><span class='line'>patch -p1 &amp;lt; stdatomic-newlib.patch
</span><span class='line'><span class="nb">cd </span>rtems
</span><span class='line'>../source-builder/sb-set-builder &amp;mdash;log<span class="o">=</span>l-arm.txt 1 &amp;mdash;prefix<span class="o">=</span><span class="nv">$HOME</span>/development/rtems/4.11 4.11/rtems-arm
</span></code></pre></td></tr></table></div></figure></notextile></div>
stdatomic-newlib.patch is as follow :
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>diff &amp;mdash;git a/rtems/config/tools/rtems-gcc-4.8.1-newlib-cvs-1.cfg b/rtems/config/tools/rtems-gcc-4.8.1-newlib-cvs-1.cfg
</span><span class='line'>index f39225d..458aa8b 100644
</span><span class='line'>&amp;mdash;&amp;ndash; a/rtems/config/tools/rtems-gcc-4.8.1-newlib-cvs-1.cfg
</span><span class='line'>+++ b/rtems/config/tools/rtems-gcc-4.8.1-newlib-cvs-1.cfg
</span><span class='line'>@@ -7,7 +7,7 @@
</span><span class='line'> %include %<span class="o">{</span>_configdir<span class="o">}</span>/versions.cfg&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; %define gcc_version    4.8.1
</span><span class='line'>&amp;ndash;%define newlib_version 31-May-2013
</span><span class='line'>+%define newlib_version 15-June-2013
</span><span class='line'> %define mpfr_version   3.0.1
</span><span class='line'> %define mpc_version    0.8.2
</span><span class='line'> %define gmp_version    5.0.5
</span></code></pre></td></tr></table></div></figure></notextile></div>
For mow information about RSB usage please refer the <a href="http://www.rtems.org/ftp/pub/rtems/people/chrisj/source-builder/source-builder.html" title="RTEMS Source Builder">RTEMS Source Builder</a></p>

<p>If everything is ok you will see the toolchains have been installed under $HOME/development/rtems/4.11.</p>

<p>This week i have finished the new atomic API design and implementation for arm architecture based on the stdatomic.h. But now it is only working on SMP mode (tested on bsp realview_pbx_a9_qemu), the TODO list in later will be:</p>

<pre><code>1.  Add the check to whether some architecture support stdatomic.h
2.  New test cased design.
3.  Other architectures support.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My first blog]]></title>
    <link href="http://WeiY.github.io/blog/2013/06/29/my-first-blog/"/>
    <updated>2013-06-29T11:17:00+08:00</updated>
    <id>http://WeiY.github.io/blog/2013/06/29/my-first-blog</id>
    <content type="html"><![CDATA[<p>Today i have setup the github blog envrionment. Then i will record the progress and the detail of the GSoc project.</p>

<p>This year i will continue to doing the project &ldquo;Atomic support for RTEMS&rdquo;, my mentor is Sebastian Huber who is working on the ARM SMP support for RTEMS. And the Atomic support is very useful for SMP system. You can also reference the project wiki <a href="http://wiki.rtems.org/wiki/index.php/Atomic_Operations" title="Atomic_Operations">Atomic_Operations</a> and my GSoc proposal <a href="https://docs.google.com/document/d/1kZtTwyw8xBzGSz-n8xFcTuD5KSrEpnzzq860wMaQtCU/edit#" title="Atomic Operations and SMP lock debug tool for RTEMS">Atomic Operations and SMP lock debug tool for RTEMS</a></p>

<p>I am looking forward and enjoying this summer!</p>
]]></content>
  </entry>
  
</feed>
